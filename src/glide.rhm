#lang rhombus


import:
  rhombus/meta open
  pict open
  pict/text open
  pict/rhombus open
  rhombus/measure
  rhombus/fixnum expose:
    - as fm
  gui expose:
    ~>
    <~




fun replace_const(stx, newnum):
  match stx:
  | '$name ($arg, ...)':
      '$name ($(replace_const(arg, newnum)), ...)'
  | '~width: $num':
      '~width: $newnum'
  | _: stx


// code is the current code for the body of the function
class Glide(mouseX, mouseY, code)


fun draw(dc, data):
  eval(data.code).draw(dc)

fun onmousefor(state):
  fun onmouse(ev :: gui.MouseEvent, area):
    state <~ fun (old): old with (mouseX = ev.x, mouseY = ev.y)
  onmouse

fun edit_slide(stx):
  let state = gui.Obs(Glide(0, 0, stx))

  let win = gui.Window(gui.Canvas(state, draw, ~mouse: onmousefor(state)), ~size: [800, 800])
  gui.render(win)




meta:
  fun glide(syntax):
    '«edit_slide('$(syntax)')»'


expr.macro 'glide $name(): $(body :: Multi)':
  glide(body)

glide tworectangles():
  beside(~sep: 10, rectangle(), rectangle())